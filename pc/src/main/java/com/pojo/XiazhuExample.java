package com.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class XiazhuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public XiazhuExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andXzidIsNull() {
            addCriterion("xzid is null");
            return (Criteria) this;
        }

        public Criteria andXzidIsNotNull() {
            addCriterion("xzid is not null");
            return (Criteria) this;
        }

        public Criteria andXzidEqualTo(Integer value) {
            addCriterion("xzid =", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidNotEqualTo(Integer value) {
            addCriterion("xzid <>", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidGreaterThan(Integer value) {
            addCriterion("xzid >", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidGreaterThanOrEqualTo(Integer value) {
            addCriterion("xzid >=", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidLessThan(Integer value) {
            addCriterion("xzid <", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidLessThanOrEqualTo(Integer value) {
            addCriterion("xzid <=", value, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidIn(List<Integer> values) {
            addCriterion("xzid in", values, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidNotIn(List<Integer> values) {
            addCriterion("xzid not in", values, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidBetween(Integer value1, Integer value2) {
            addCriterion("xzid between", value1, value2, "xzid");
            return (Criteria) this;
        }

        public Criteria andXzidNotBetween(Integer value1, Integer value2) {
            addCriterion("xzid not between", value1, value2, "xzid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andXztimeIsNull() {
            addCriterion("xztime is null");
            return (Criteria) this;
        }

        public Criteria andXztimeIsNotNull() {
            addCriterion("xztime is not null");
            return (Criteria) this;
        }

        public Criteria andXztimeEqualTo(Date value) {
            addCriterion("xztime =", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeNotEqualTo(Date value) {
            addCriterion("xztime <>", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeGreaterThan(Date value) {
            addCriterion("xztime >", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeGreaterThanOrEqualTo(Date value) {
            addCriterion("xztime >=", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeLessThan(Date value) {
            addCriterion("xztime <", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeLessThanOrEqualTo(Date value) {
            addCriterion("xztime <=", value, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeIn(List<Date> values) {
            addCriterion("xztime in", values, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeNotIn(List<Date> values) {
            addCriterion("xztime not in", values, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeBetween(Date value1, Date value2) {
            addCriterion("xztime between", value1, value2, "xztime");
            return (Criteria) this;
        }

        public Criteria andXztimeNotBetween(Date value1, Date value2) {
            addCriterion("xztime not between", value1, value2, "xztime");
            return (Criteria) this;
        }

        public Criteria andIssueIsNull() {
            addCriterion("issue is null");
            return (Criteria) this;
        }

        public Criteria andIssueIsNotNull() {
            addCriterion("issue is not null");
            return (Criteria) this;
        }

        public Criteria andIssueEqualTo(Integer value) {
            addCriterion("issue =", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotEqualTo(Integer value) {
            addCriterion("issue <>", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueGreaterThan(Integer value) {
            addCriterion("issue >", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueGreaterThanOrEqualTo(Integer value) {
            addCriterion("issue >=", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueLessThan(Integer value) {
            addCriterion("issue <", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueLessThanOrEqualTo(Integer value) {
            addCriterion("issue <=", value, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueIn(List<Integer> values) {
            addCriterion("issue in", values, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotIn(List<Integer> values) {
            addCriterion("issue not in", values, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueBetween(Integer value1, Integer value2) {
            addCriterion("issue between", value1, value2, "issue");
            return (Criteria) this;
        }

        public Criteria andIssueNotBetween(Integer value1, Integer value2) {
            addCriterion("issue not between", value1, value2, "issue");
            return (Criteria) this;
        }

        public Criteria andXznumberIsNull() {
            addCriterion("xznumber is null");
            return (Criteria) this;
        }

        public Criteria andXznumberIsNotNull() {
            addCriterion("xznumber is not null");
            return (Criteria) this;
        }

        public Criteria andXznumberEqualTo(String value) {
            addCriterion("xznumber =", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberNotEqualTo(String value) {
            addCriterion("xznumber <>", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberGreaterThan(String value) {
            addCriterion("xznumber >", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberGreaterThanOrEqualTo(String value) {
            addCriterion("xznumber >=", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberLessThan(String value) {
            addCriterion("xznumber <", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberLessThanOrEqualTo(String value) {
            addCriterion("xznumber <=", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberLike(String value) {
            addCriterion("xznumber like", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberNotLike(String value) {
            addCriterion("xznumber not like", value, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberIn(List<String> values) {
            addCriterion("xznumber in", values, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberNotIn(List<String> values) {
            addCriterion("xznumber not in", values, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberBetween(String value1, String value2) {
            addCriterion("xznumber between", value1, value2, "xznumber");
            return (Criteria) this;
        }

        public Criteria andXznumberNotBetween(String value1, String value2) {
            addCriterion("xznumber not between", value1, value2, "xznumber");
            return (Criteria) this;
        }

        public Criteria andOddsIsNull() {
            addCriterion("odds is null");
            return (Criteria) this;
        }

        public Criteria andOddsIsNotNull() {
            addCriterion("odds is not null");
            return (Criteria) this;
        }

        public Criteria andOddsEqualTo(Double value) {
            addCriterion("odds =", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsNotEqualTo(Double value) {
            addCriterion("odds <>", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsGreaterThan(Double value) {
            addCriterion("odds >", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsGreaterThanOrEqualTo(Double value) {
            addCriterion("odds >=", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsLessThan(Double value) {
            addCriterion("odds <", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsLessThanOrEqualTo(Double value) {
            addCriterion("odds <=", value, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsIn(List<Double> values) {
            addCriterion("odds in", values, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsNotIn(List<Double> values) {
            addCriterion("odds not in", values, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsBetween(Double value1, Double value2) {
            addCriterion("odds between", value1, value2, "odds");
            return (Criteria) this;
        }

        public Criteria andOddsNotBetween(Double value1, Double value2) {
            addCriterion("odds not between", value1, value2, "odds");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("location like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("location not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("money is null");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("money is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualTo(Integer value) {
            addCriterion("money =", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualTo(Integer value) {
            addCriterion("money <>", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThan(Integer value) {
            addCriterion("money >", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(Integer value) {
            addCriterion("money >=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThan(Integer value) {
            addCriterion("money <", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualTo(Integer value) {
            addCriterion("money <=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyIn(List<Integer> values) {
            addCriterion("money in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotIn(List<Integer> values) {
            addCriterion("money not in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyBetween(Integer value1, Integer value2) {
            addCriterion("money between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotBetween(Integer value1, Integer value2) {
            addCriterion("money not between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andCloseIsNull() {
            addCriterion("close is null");
            return (Criteria) this;
        }

        public Criteria andCloseIsNotNull() {
            addCriterion("close is not null");
            return (Criteria) this;
        }

        public Criteria andCloseEqualTo(Integer value) {
            addCriterion("close =", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseNotEqualTo(Integer value) {
            addCriterion("close <>", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseGreaterThan(Integer value) {
            addCriterion("close >", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseGreaterThanOrEqualTo(Integer value) {
            addCriterion("close >=", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseLessThan(Integer value) {
            addCriterion("close <", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseLessThanOrEqualTo(Integer value) {
            addCriterion("close <=", value, "close");
            return (Criteria) this;
        }

        public Criteria andCloseIn(List<Integer> values) {
            addCriterion("close in", values, "close");
            return (Criteria) this;
        }

        public Criteria andCloseNotIn(List<Integer> values) {
            addCriterion("close not in", values, "close");
            return (Criteria) this;
        }

        public Criteria andCloseBetween(Integer value1, Integer value2) {
            addCriterion("close between", value1, value2, "close");
            return (Criteria) this;
        }

        public Criteria andCloseNotBetween(Integer value1, Integer value2) {
            addCriterion("close not between", value1, value2, "close");
            return (Criteria) this;
        }

        public Criteria andFanliIsNull() {
            addCriterion("fanli is null");
            return (Criteria) this;
        }

        public Criteria andFanliIsNotNull() {
            addCriterion("fanli is not null");
            return (Criteria) this;
        }

        public Criteria andFanliEqualTo(Double value) {
            addCriterion("fanli =", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliNotEqualTo(Double value) {
            addCriterion("fanli <>", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliGreaterThan(Double value) {
            addCriterion("fanli >", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliGreaterThanOrEqualTo(Double value) {
            addCriterion("fanli >=", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliLessThan(Double value) {
            addCriterion("fanli <", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliLessThanOrEqualTo(Double value) {
            addCriterion("fanli <=", value, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliIn(List<Double> values) {
            addCriterion("fanli in", values, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliNotIn(List<Double> values) {
            addCriterion("fanli not in", values, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliBetween(Double value1, Double value2) {
            addCriterion("fanli between", value1, value2, "fanli");
            return (Criteria) this;
        }

        public Criteria andFanliNotBetween(Double value1, Double value2) {
            addCriterion("fanli not between", value1, value2, "fanli");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xiazhu
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 27 21:38:33 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xiazhu
     *
     * @mbggenerated Wed Jun 27 21:38:33 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}